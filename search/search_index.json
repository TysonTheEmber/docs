{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to my wiki! This is the central hub for my Minecraft mods, docs, and releases.</p>"},{"location":"#featured-projects","title":"Featured Projects","text":""},{"location":"#embers-text-api","title":"Embers Text API","text":"<p>Animated in-game overlays, banners, and cinematic messaging.</p> <p> Docs  GitHub  Modrinth  CurseForge</p>"},{"location":"#aperture-api","title":"Aperture API","text":"<p>Forge cinematic camera tooling with in-game editing and path exports.</p> <p> Docs  GitHub  Modrinth  CurseForge</p>"},{"location":"#spelunkery","title":"Spelunkery+","text":"<p>Compatibility expansion for mining progression and underground loot.</p> <p> GitHub</p> <p> CurseForge</p>"},{"location":"#echoes-of-battle","title":"Echoes of Battle","text":"<p>Immersive boss voice lines and reactive combat messaging.</p> <p> CurseForge</p>"},{"location":"#embercraft-rekindled","title":"EmberCraft: Rekindled","text":"<p>Signature modpack blending exploration, combat, and cozy automation.</p> <p> CurseForge</p>"},{"location":"Aperture-API/","title":"\ud83c\udfa5 Aperture API (Forge 1.20.1)","text":"<p>Aperture API provides an in\u2011game cinematic camera editor, a robust pathing engine (Catmull\u2011Rom, B\u00e9zier, cosine, step, linear), and a compact command surface for playing/previewing camera shots.</p> <p>At a glance</p> <ul> <li>Mod ID: <code>apertureapi</code></li> <li>Minecraft / Java: Forge 1.20.1, Java 17</li> <li>Command roots: <code>/aperture</code>, <code>/camera</code></li> <li>Key features: Keyframes, per\u2011keyframe easing, B\u00e9zier handles, live path preview, constant\u2011speed playback, JSON import/export</li> </ul>"},{"location":"Aperture-API/#what-you-can-build","title":"What you can build","text":"<ul> <li>Smooth timelapses with constant velocity along Catmull\u2011Rom curves</li> <li>Precise shots using in\u2011game handles/gizmo</li> <li>Cinematics that follow a player/entity or lock to a block position</li> <li>Datapack\u2011driven camera sequences using JSON paths and <code>/camera play</code></li> </ul>"},{"location":"Aperture-API/api-reference/","title":"\ud83d\udcda Java API Reference","text":"<p>Packages follow <code>net.tysontheember.apertureapi</code> with subpackages like <code>api</code>, <code>client</code>, <code>command</code>, <code>commands</code>, <code>path</code>, <code>util</code> (see repo README).</p>"},{"location":"Aperture-API/api-reference/#entry-points-typical","title":"Entry Points (typical)","text":"<pre><code>// Play a path for a player\nCameraController.play(ServerPlayer player, CameraPath path, PlayOptions opts);\n\n// Stop/reset\nCameraController.stop(ServerPlayer player);\nCameraController.reset(ServerPlayer player);\n\n// Export/import\nCameraIO.exportToJson(CameraPath path, Path file);\nCameraPath loaded = CameraIO.importFromJson(Path file);\n</code></pre>"},{"location":"Aperture-API/api-reference/#core-types-representative","title":"Core Types (representative)","text":"<pre><code>class CameraPath {\n  String name;\n  Interpolation interpolation; // CATMULL_ROM, BEZIER, LINEAR, COSINE, STEP\n  boolean constantSpeed;\n  List&lt;Keyframe&gt; keyframes;\n}\n\nclass Keyframe {\n  Vec3 pos;\n  float yaw, pitch, roll;\n  Float fov;       // optional\n  int time;        // ticks to next (or absolute)\n  Ease ease;       // NONE, IN, OUT, IN_OUT\n  BezierHandles bezier; // optional\n}\n\nclass BezierHandles {\n  Vec3 in, out;\n  HandleType type; // AUTO, ALIGNED, FREE, VECTOR\n}\n\nenum Interpolation { CATMULL_ROM, BEZIER, LINEAR, COSINE, STEP }\nenum Ease { NONE, IN, OUT, IN_OUT }\nenum HandleType { AUTO, ALIGNED, FREE, VECTOR }\n</code></pre> <p>Exact names may differ slightly pending current revision; consult your <code>api/</code> package when in doubt.</p>"},{"location":"Aperture-API/commands/","title":"\ud83e\udded Commands","text":"<p>Aperture ships two roots (as described in the repo README):</p> <ul> <li><code>/aperture</code> \u2014 core info &amp; UI</li> <li><code>/camera</code> \u2014 path management &amp; playback</li> </ul>"},{"location":"Aperture-API/commands/#aperture","title":"<code>/aperture</code>","text":"<p><pre><code>/aperture help\n/aperture version\n/aperture api\n/aperture editor [open|close|toggle]\n</code></pre> - help \u2014 shows usage - version \u2014 prints mod &amp; API versions - api \u2014 prints minimal API surface entry points for devs - editor \u2014 toggle the in\u2011game editor UI</p>"},{"location":"Aperture-API/commands/#camera","title":"<code>/camera</code>","text":"<pre><code>/camera list [namespace]\n/camera play &lt;path&gt; [speed:&lt;float&gt;] [loop:&lt;bool&gt;] [autoreset:&lt;bool&gt;] [target:&lt;selector&gt;] [follow:&lt;entity|block&gt;]\n/camera stop [target:&lt;selector&gt;]\n/camera reset [target:&lt;selector&gt;]\n/camera export &lt;path&gt; [as:&lt;json|nbt&gt;] [to:&lt;file&gt;]\n/camera import &lt;name&gt; from &lt;file&gt; [replace:&lt;bool&gt;]\n/camera interpolation &lt;path&gt; &lt;catmullrom|bezier|linear|cosine|step&gt;\n/camera keyframe add [pos] [rot] [time:&lt;ticks&gt;] [ease:&lt;none|in|out|inout&gt;]\n/camera keyframe set &lt;index&gt; [pos|rot|fov|time|ease|handleIn|handleOut]=&lt;...&gt;\n/camera keyframe remove &lt;index&gt;\n</code></pre> <p>Notes - <code>path</code> refers to a stored path by name (e.g., <code>\"intro_flyover\"</code>). - <code>target</code> accepts selectors/players (<code>@p</code>, <code>@a</code>, <code>@s</code>(if ran by player), player names). - <code>follow</code> accepts an entity selector or a block position (<code>x y z</code>). - Import/export paths resolve to a per\u2011world or server path folder.</p>"},{"location":"Aperture-API/commands/#examples","title":"Examples","text":"<pre><code>/camera list\n/camera interpolation intro_flyover catmullrom\n/camera play intro_flyover speed:1.2 loop:true autoreset:false target:@a\n/camera stop target:@a\n</code></pre>"},{"location":"Aperture-API/concepts/","title":"\ud83e\udde0 Core Concepts","text":""},{"location":"Aperture-API/concepts/#paths","title":"Paths","text":"<p>A Path is an ordered list of Keyframes. The path\u2019s Interpolation (Catmull\u2011Rom, B\u00e9zier, Linear, Cosine, Step) determines how the camera moves between keyframes.</p>"},{"location":"Aperture-API/concepts/#keyframes","title":"Keyframes","text":"<p>Each keyframe stores: - Position (<code>x y z</code>, world coords) - Rotation (<code>yaw pitch</code>), optional roll - FOV (optional) - Time / duration to next keyframe (or use path\u2011level playback speed) - Ease in/out or per\u2011segment easing (for Linear/Cosine/Step) - Handles for B\u00e9zier (<code>in</code>, <code>out</code>) with handle types: <code>AUTO | ALIGNED | FREE | VECTOR</code></p>"},{"location":"Aperture-API/concepts/#playback","title":"Playback","text":"<ul> <li>Speed: units/sec (converted to ticks) or normalized duration</li> <li>Loop: repeat, or auto\u2011reset to player view at end</li> <li>Target: player(s) to play on</li> <li>Follow: lock camera to an entity/block while still pathing (optional)</li> </ul>"},{"location":"Aperture-API/concepts/#editor-gizmo","title":"Editor &amp; Gizmo","text":"<p>The in\u2011game editor shows path lines and B\u00e9zier handles. Selecting a keyframe reveals draggable in/out handles and a rotation gizmo (yaw/pitch, optional roll). A slider scrubs the timeline and updates the preview path dynamically.</p>"},{"location":"Aperture-API/installation/","title":"\u2699\ufe0f Installation","text":""},{"location":"Aperture-API/installation/#requirements","title":"Requirements","text":"<ul> <li>Minecraft Forge 1.20.1</li> <li>Java 17</li> </ul>"},{"location":"Aperture-API/installation/#clientserver-layout","title":"Client/Server layout","text":"<p>The camera path plays on clients but can be commanded from the server. For multiplayer, install on both server and clients.</p>"},{"location":"Aperture-API/installation/#build-run-dev","title":"Build &amp; Run (dev)","text":"<p><pre><code>./gradlew assemble\n./gradlew runClient\n</code></pre> To add from source, include the project as a module or publish locally and depend on it as a normal Forge mod.</p>"},{"location":"Aperture-API/installation/#quick-verification","title":"Quick verification","text":"<p>Launch a world and run: <pre><code>/aperture\n/camera list\n</code></pre> You should see the editor or command help respond.</p>"},{"location":"Aperture-API/nbt-json/","title":"\ud83e\uddf1 JSON / NBT Schema","text":"<p>Aperture paths can be imported/exported as JSON (and possibly NBT for tighter integration). The canonical JSON form is:</p> <pre><code>{\n  \"name\": \"intro_flyover\",\n  \"interpolation\": \"catmullrom\",\n  \"constantSpeed\": true,\n  \"follow\": {\n    \"type\": \"entity|block|null\",\n    \"selector\": \"@p\",\n    \"pos\": [0, 64, 0]\n  },\n  \"keyframes\": [\n    {\n      \"pos\": [x, y, z],\n      \"rot\": {\"yaw\": 0.0, \"pitch\": 0.0, \"roll\": 0.0},\n      \"fov\": 70.0,\n      \"time\": 40,\n      \"ease\": \"none|in|out|inout\",\n      \"bezier\": {\n        \"handleIn\":  [dx, dy, dz],\n        \"handleOut\": [dx, dy, dz],\n        \"type\": \"AUTO|ALIGNED|FREE|VECTOR\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Aperture-API/nbt-json/#tags-top-level","title":"Tags (Top Level)","text":"<ul> <li><code>name</code> (string) \u2014 Path ID</li> <li><code>interpolation</code> (enum) \u2014 <code>catmullrom|bezier|linear|cosine|step</code></li> <li><code>constantSpeed</code> (bool) \u2014 Retimes segments for uniform motion</li> <li><code>follow</code> (object|null) \u2014 Attach camera to entity/block</li> </ul>"},{"location":"Aperture-API/nbt-json/#follow-object","title":"<code>follow</code> object","text":"<ul> <li><code>type</code> \u2014 <code>entity</code> or <code>block</code></li> <li><code>selector</code> \u2014 entity selector when <code>type=entity</code></li> <li><code>pos</code> \u2014 block position <code>[x,y,z]</code> when <code>type=block</code></li> </ul>"},{"location":"Aperture-API/nbt-json/#keyframe","title":"Keyframe","text":"<ul> <li><code>pos</code> \u2014 world coordinates <code>[x,y,z]</code></li> <li><code>rot</code> \u2014 <code>{yaw, pitch, roll}</code> (roll optional; default 0)</li> <li><code>fov</code> \u2014 field of view (optional)</li> <li><code>time</code> \u2014 ticks to next keyframe (or absolute timestamp depending on editor mode)</li> <li><code>ease</code> \u2014 <code>none|in|out|inout</code></li> <li><code>bezier</code> \u2014 handles (only used for <code>interpolation=bezier</code>)</li> </ul>"},{"location":"Aperture-API/nbt-json/#bezier-handle-types","title":"B\u00e9zier handle types","text":"<ul> <li><code>AUTO</code> \u2014 auto smooth tangents</li> <li><code>ALIGNED</code> \u2014 in/out share a direction; lengths vary</li> <li><code>FREE</code> \u2014 fully independent</li> <li><code>VECTOR</code> \u2014 straight lines keeping direction to neighbor</li> </ul>"},{"location":"Aperture-API/troubleshooting/","title":"\ud83d\udee0 Troubleshooting","text":"<p>Editor not opening - Ensure mod is installed on client. Try <code>/aperture editor toggle</code>.</p> <p>Path plays but camera snaps - Check interpolation; switch to Catmull\u2011Rom or B\u00e9zier and retime keyframes. - Remove extremely short segments or set <code>constantSpeed:true</code>.</p> <p>Follow target drifts - Prefer entity follow for moving targets; for blocks, ensure coordinates are chunk\u2011loaded.</p> <p>JSON import fails - Validate JSON schema (see JSON / NBT Schema). - Confirm file path and permissions; use <code>replace:true</code> if overwriting.</p>"},{"location":"Aperture-API/tutorials/","title":"\ud83d\udcd6 Tutorials","text":"<ul> <li>Create a path in-game</li> <li>Import &amp; play a JSON path</li> <li>Follow an entity or block</li> <li>Constant-speed timelapse</li> <li>Datapack function triggers</li> </ul>"},{"location":"Aperture-API/tutorials/constant-speed/","title":"Constant-speed timelapse","text":"<p>Enable <code>constantSpeed</code> on the path or set per\u2011segment <code>time</code> evenly. Catmull\u2011Rom with constant speed is ideal for long flyovers.</p> <pre><code>/camera interpolation long_fly catmullrom\n/camera play long_fly speed:1.5 loop:true target:@a\n</code></pre>"},{"location":"Aperture-API/tutorials/datapack-usage/","title":"Datapack function triggers","text":"<p>Create <code>data/intro/functions/scene.mcfunction</code>: <pre><code>camera import intro from data/intro/paths/intro.json replace:true\ncamera play intro target:@a speed:1.0\n</code></pre> Trigger via advancement or schedule for cutscenes.</p>"},{"location":"Aperture-API/tutorials/follow-target/","title":"Follow an entity or block","text":"<p>Lock camera to an entity while moving along a path:</p> <pre><code>/camera play boss_intro speed:0.8 target:@a follow:@e[type=minecraft:wither,limit=1]\n</code></pre> <p>Or to a block position: <pre><code>/camera play quarry_pan speed:1.0 follow:100 64 -30\n</code></pre></p>"},{"location":"Aperture-API/tutorials/json-import-play/","title":"Import &amp; play a JSON path","text":"<ol> <li>Put <code>intro_flyover.json</code> into your world/server paths folder.</li> <li>Import and play:</li> </ol> <pre><code>/camera import intro_flyover from intro_flyover.json replace:true\n/camera play intro_flyover speed:1.0 target:@a\n</code></pre>"},{"location":"Aperture-API/tutorials/path-editor/","title":"Create a path in-game","text":"<ol> <li><code>/aperture editor open</code> </li> <li>Add keyframes where you stand. Adjust rotation (hover the rotation gizmo).  </li> <li>Switch interpolation to B\u00e9zier for fine control; drag in/out handles.  </li> <li>Use the scrubber to preview.  </li> <li>Save as <code>intro_flyover</code>.</li> </ol> <pre><code>/camera interpolation intro_flyover bezier\n/camera play intro_flyover speed:1.0 loop:false target:@p\n</code></pre>"},{"location":"Embers-Text-API/","title":"\ud83d\udd25 Embers Text API","text":"<p>Embers Text API is a lightweight Forge 1.20.1 library for creating polished, animated text overlays (toasts, popups, hotbar banners, etc.). It replaces Immersive Messages with a clean, Forge\u2011only stack and a fluent Builder API.</p> <p>This documentation covers: Overview, Installation, Commands, NBT schema, Builder API, Tutorials, and Troubleshooting.</p> <p>At a glance</p> <ul> <li>Mod ID: <code>emberstextapi</code></li> <li>Primary Class: <code>net.tysontheember.emberstextapi.EmbersTextAPI</code></li> <li>Core Type: <code>ImmersiveMessage</code> (builder pattern)</li> <li>Command root: <code>/emberstextapi</code></li> </ul>"},{"location":"Embers-Text-API/#feature-highlights","title":"\u2728 Feature Highlights","text":"<ul> <li>Fluent Builder API (anchors, alignment, scaling, gradients, background frames, texture backgrounds)</li> <li>Effects: typewriter, obfuscation reveal, whole-text &amp; per-character shakes</li> <li>Fonts: JSON + TTF/OTF under <code>assets/emberstextapi/font/</code></li> <li>Networking: <code>EmbersTextAPI.sendMessage(ServerPlayer, ImmersiveMessage)</code></li> <li>Commands: <code>/emberstextapi test|send|sendcustom</code></li> </ul>"},{"location":"Embers-Text-API/#when-to-use-it","title":"When to use it","text":"<ul> <li>You want immersive quest toasts, boss callouts, or tutorial banners without custom GUI code.</li> <li>You need programmatic control or a simple command + NBT for datapacks/ops.</li> </ul>"},{"location":"Embers-Text-API/api-reference/","title":"\ud83d\udcda Java API Reference","text":"<p>The core of Embers Text API is the <code>ImmersiveMessage</code> builder and the entry-point <code>EmbersTextAPI</code> network helper.</p>"},{"location":"Embers-Text-API/api-reference/#entry-points","title":"Entry Points","text":""},{"location":"Embers-Text-API/api-reference/#emberstextapisendmessageserverplayer-immersivemessage","title":"<code>EmbersTextAPI.sendMessage(ServerPlayer, ImmersiveMessage)</code>","text":"<p>Sends a built message to a specific player over the mod's SimpleChannel.</p> <pre><code>import net.minecraft.server.level.ServerPlayer;\nimport net.tysontheember.emberstextapi.EmbersTextAPI;\nimport net.tysontheember.emberstextapi.immersivemessages.api.ImmersiveMessage;\n\npublic void onJoin(ServerPlayer player) {\n    var msg = ImmersiveMessage.builder(80f, \"Welcome!\")\n        .anchor(TextAnchor.TOP_CENTER)\n        .background(true);\n    EmbersTextAPI.sendMessage(player, msg);\n}\n</code></pre>"},{"location":"Embers-Text-API/api-reference/#immersivemessage-builder","title":"<code>ImmersiveMessage</code> Builder","text":""},{"location":"Embers-Text-API/api-reference/#construction","title":"Construction","text":"<pre><code>ImmersiveMessage builder = ImmersiveMessage.builder(float duration, String text);\n</code></pre>"},{"location":"Embers-Text-API/api-reference/#common-methods","title":"Common Methods","text":"Method Signature Notes <code>anchor</code> <code>anchor(TextAnchor value)</code> Screen anchor position <code>align</code> <code>align(TextAnchor value)</code> Text alignment relative to anchor <code>offset</code> <code>offset(float x, float y)</code> Pixel offset from anchor <code>scale</code> <code>scale(float size)</code> Uniform text scale <code>color</code> <code>color(int argb)</code> / <code>color(String)</code> / <code>color(ChatFormatting)</code> Solid color <code>gradient</code> <code>gradient(int... colors)</code> / <code>gradient(String... colors)</code> Multi-stop gradient <code>background</code> <code>background(boolean enable)</code> Tooltip-style frame <code>bgColor</code> <code>bgColor(int/string)</code> Background fill (enables background) <code>borderGradient</code> <code>borderGradient(int start, int end)</code> Gradient border <code>textureBackground</code> <code>textureBackground(ResourceLocation tex)</code> / <code>textureBackground(TextureSpec spec)</code> Textured panel <code>textureBackgroundScale</code> <code>textureBackgroundScale(float x, float y)</code> UV scaling (tiling density) <code>textureBackgroundPadding</code> <code>textureBackgroundPadding(int x, int y)</code> Extra padding <code>textureBackgroundSize</code> <code>textureBackgroundSize(int x, int y)</code> Draw size override <code>textureBackgroundWidth/Height</code> <code>textureBackgroundWidth(int)</code> / <code>textureBackgroundHeight(int)</code> Axis-specific override <code>textureBackgroundMode</code> <code>textureBackgroundMode(ResizeMode mode)</code> STRETCH/CROP/TILE <code>wrap</code> <code>wrap(int width)</code> Line wrap in pixels <code>typewriter</code> <code>typewriter(float cps)</code> / <code>typewriter(float cps, boolean center)</code> Char-by-char reveal <code>shake</code> <code>shake(ShakeType type, float amplitude)</code> Whole-message shake <code>charShake</code> <code>charShake(ShakeType type, float amplitude)</code> Per-character shake <code>shadow</code> <code>shadow(boolean on)</code> Drop shadow toggle <p>Names reflect the public API as exposed by the repository; some overloads or helper setters may differ slightly between revisions.</p>"},{"location":"Embers-Text-API/api-reference/#enums","title":"Enums","text":"<pre><code>enum TextAnchor {\n    TOP_LEFT, TOP_CENTER, TOP_RIGHT,\n    CENTER_LEFT, CENTER_CENTER, CENTER_RIGHT,\n    BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT\n}\n\nenum ShakeType { WAVE, CIRCLE, RANDOM }\n\nenum ResizeMode { STRETCH, CROP, TILE }\n</code></pre>"},{"location":"Embers-Text-API/api-reference/#data-driven-fonts","title":"Data-driven fonts","text":"<p>Place a <code>.json</code> and font file under: <pre><code>assets/emberstextapi/font/\n</code></pre> Then reference by <code>font:\"modid:your_font\"</code> in NBT or builder helpers.</p>"},{"location":"Embers-Text-API/commands_and_nbt/","title":"\ud83d\udcdd Commands &amp; NBT Reference","text":"<p>This page combines the full command reference and the NBT schema for <code>/emberstextapi sendcustom</code> into one place.</p>"},{"location":"Embers-Text-API/commands_and_nbt/#command-reference","title":"\ud83e\udded Command Reference","text":"<p>All commands live under the root: <code>/emberstextapi</code>.</p>"},{"location":"Embers-Text-API/commands_and_nbt/#syntax-overview","title":"Syntax Overview","text":"<pre><code>/emberstextapi test &lt;id:int&gt;\n/emberstextapi send &lt;targets:players&gt; &lt;duration:int&gt; &lt;text:quoted_string&gt;\n/emberstextapi sendcustom &lt;targets:players&gt; &lt;nbt:compound&gt; &lt;duration:int&gt; &lt;text:quoted_string&gt;\n</code></pre> <p>Arguments - <code>targets</code> \u2014 one or more players (<code>@p</code>, <code>@a</code>, <code>@s</code>, <code>@r</code>, or names) - <code>id</code> \u2014 demo ID. The mod ships with 9 demos (<code>1..9</code>). - <code>duration</code> \u2014 display time in ticks (20 ticks = 1 second unless build uses seconds). - <code>text</code> \u2014 the message contents (quote if spaces). - <code>nbt</code> \u2014 an NBT Compound (see schema below).</p> <p>Quick Start</p> <pre><code>/emberstextapi send @a 80 \"Server reboot in 5 minutes\"\n</code></pre>"},{"location":"Embers-Text-API/commands_and_nbt/#emberstextapi-test","title":"<code>/emberstextapi test</code>","text":"<p>Plays a built-in demo showcasing common styles/effects.</p> <pre><code>/emberstextapi test 1\n/emberstextapi test 2\n...\n/emberstextapi test 9\n</code></pre>"},{"location":"Embers-Text-API/commands_and_nbt/#emberstextapi-send","title":"<code>/emberstextapi send</code>","text":"<p>Sends a basic message to target players.</p> <pre><code>/emberstextapi send &lt;targets&gt; &lt;duration&gt; &lt;text&gt;\n</code></pre> <p>Example <pre><code>/emberstextapi send @p 100 \"Welcome to the server!\"\n</code></pre></p>"},{"location":"Embers-Text-API/commands_and_nbt/#emberstextapi-sendcustom","title":"<code>/emberstextapi sendcustom</code>","text":"<p>Full-control message using NBT to describe visuals/animation/layout.</p> <pre><code>/emberstextapi sendcustom &lt;targets&gt; &lt;nbt&gt; &lt;duration&gt; &lt;text&gt;\n</code></pre> <p>Examples <pre><code>/emberstextapi sendcustom @a {anchor:\"BOTTOM_RIGHT\",offsetX:-8,offsetY:-8,wrap:140,background:true} 120 \"New quest available!\"\n</code></pre> <pre><code>/emberstextapi sendcustom @p {gradient:[\"#FF8C00\",\"#FF4500\"],typewriter:2.0,center:true,shakeWave:1.2} 80 \"Boss Approaches...\"\n</code></pre> <pre><code>/emberstextapi sendcustom @a {textureBackground:{texture:\"modid:textures/gui/panel.png\",mode:\"STRETCH\",paddingX:6,paddingY:4}} 100 \"Daily Reward Unlocked!\"\n</code></pre></p>"},{"location":"Embers-Text-API/commands_and_nbt/#nbt-schema-for-sendcustom","title":"\ud83e\uddf1 NBT Schema (for <code>sendcustom</code>)","text":"<p>Use these tags inside the <code>&lt;nbt:compound&gt;</code> of <code>/emberstextapi sendcustom</code>. Types are JSON-like for readability (the command uses Brigadier CompoundTag under the hood).</p>"},{"location":"Embers-Text-API/commands_and_nbt/#text-content-styling","title":"Text Content &amp; Styling","text":"Tag Type Description Example <code>font</code> <code>string</code> (ResourceLocation) Use a custom font resource <code>{font:\"modid:my_font\"}</code> <code>bold</code> / <code>italic</code> / <code>underlined</code> / <code>strikethrough</code> / <code>obfuscated</code> <code>boolean</code> Vanilla text styles <code>{bold:true,italic:true}</code> <code>color</code> <code>string</code> Named (<code>\"red\"</code>) or hex (<code>\"#FFA500\"</code>) <code>{color:\"#FFAA00\"}</code> <code>gradient</code> <code>string[]</code> or <code>{start,end}</code> Multi-stop gradient across glyphs <code>{gradient:[\"#FF0000\",\"#00FF00\",\"#0000FF\"]}</code>"},{"location":"Embers-Text-API/commands_and_nbt/#background-border","title":"Background &amp; Border","text":"Tag Type Description Example <code>background</code> <code>boolean</code> Toggle tooltip-style frame <code>{background:true}</code> <code>bgColor</code> <code>string</code> Solid background color (implies <code>background:true</code>) <code>{bgColor:\"#333333CC\"}</code> <code>borderColor</code> <code>string</code> Solid border color <code>{borderColor:\"#FFFFFF\"}</code> <code>bgGradient</code> <code>string[]</code> or <code>{start,end}</code> Gradient fill for background <code>{bgGradient:{start:\"#FF000080\",end:\"#0000FF80\"}}</code> <code>borderGradient</code> <code>string[]</code> Gradient for border <code>{borderGradient:[\"#FF0000\",\"#00FF00\"]}</code> <code>bgAlpha</code> <code>float 0..1</code> Background opacity <code>{bgAlpha:0.65}</code>"},{"location":"Embers-Text-API/commands_and_nbt/#texture-background","title":"Texture Background","text":"<p>String form <pre><code>{textureBackground:\"modid:textures/gui/panel.png\"}\n</code></pre></p> <p>Object form <pre><code>{textureBackground:{\n  texture:\"modid:textures/gui/panel.png\",\n  u:0, v:0, width:256, height:256,\n  textureWidth:256, textureHeight:256,\n  paddingX:6, paddingY:4,\n  scaleX:1.0, scaleY:1.0,\n  sizeX:120, sizeY:40,\n  mode:\"STRETCH\"  # STRETCH | CROP | TILE\n}}\n</code></pre></p>"},{"location":"Embers-Text-API/commands_and_nbt/#layout-positioning","title":"Layout &amp; Positioning","text":"Tag Type Description Example <code>anchor</code> <code>string enum</code> Screen anchor (see <code>TextAnchor</code>) <code>{anchor:\"CENTER_CENTER\"}</code> <code>align</code> <code>string enum</code> Text alignment relative to anchor <code>{align:\"TOP_CENTER\"}</code> <code>offsetX</code>, <code>offsetY</code> <code>int</code> (px) Offset from anchor <code>{offsetX:10,offsetY:-20}</code> <code>wrap</code> <code>int</code> Line wrap width <code>{wrap:140}</code> <code>size</code> <code>float</code> Uniform scale multiplier <code>{size:1.25}</code> <code>shadow</code> <code>boolean</code> Drop shadow toggle <code>{shadow:true}</code>"},{"location":"Embers-Text-API/commands_and_nbt/#effects-animation","title":"Effects &amp; Animation","text":"Tag Type Description Example <code>typewriter</code> <code>float</code> Characters-per-tick reveal speed <code>{typewriter:2.0}</code> <code>center</code> <code>boolean</code> Keep centered while typewriter animates <code>{center:true}</code> <code>obfuscate</code> <code>string enum</code> Reveal direction <code>\"LEFT\"|\"RIGHT\"|\"CENTER\"|\"RANDOM\"</code> <code>{obfuscate:\"LEFT\"}</code> <code>obfuscateSpeed</code> <code>float</code> Reveal speed <code>{obfuscateSpeed:0.1}</code> <code>shakeWave</code> / <code>shakeCircle</code> / <code>shakeRandom</code> <code>float</code> Whole-message shake amplitude <code>{shakeWave:1.2}</code> <code>charShakeWave</code> / <code>charShakeCircle</code> / <code>charShakeRandom</code> <code>float</code> Per-character shake amplitude <code>{charShakeRandom:0.8}</code>"},{"location":"Embers-Text-API/commands_and_nbt/#enums","title":"Enums","text":""},{"location":"Embers-Text-API/commands_and_nbt/#textanchor","title":"<code>TextAnchor</code>","text":"<pre><code>TOP_LEFT, TOP_CENTER, TOP_RIGHT,\nCENTER_LEFT, CENTER_CENTER, CENTER_RIGHT,\nBOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT\n</code></pre>"},{"location":"Embers-Text-API/commands_and_nbt/#shaketype-java-api","title":"<code>ShakeType</code> (Java API)","text":"<pre><code>WAVE, CIRCLE, RANDOM\n</code></pre>"},{"location":"Embers-Text-API/features/","title":"\u2728 Features (Deep Dive)","text":""},{"location":"Embers-Text-API/features/#anchoring-alignment","title":"Anchoring &amp; Alignment","text":"<ul> <li><code>anchor(TextAnchor)</code> chooses a screen origin; <code>align(TextAnchor)</code> aligns text box relative to that origin.</li> <li>Use <code>offset(x,y)</code> in pixels from the anchor to fine-tune.</li> </ul>"},{"location":"Embers-Text-API/features/#colors-gradients","title":"Colors &amp; Gradients","text":"<ul> <li><code>color(...)</code> supports ARGB ints, hex strings, or <code>ChatFormatting</code> names.</li> <li><code>gradient(...)</code> can take multiple stops (e.g., sunrise text).</li> </ul>"},{"location":"Embers-Text-API/features/#backgrounds","title":"Backgrounds","text":"<ul> <li>Tooltip-style: <code>background(true)</code> with <code>bgColor</code>, <code>bgGradient</code>, <code>borderColor</code>, <code>borderGradient</code>, <code>bgAlpha</code>.</li> <li>Textured: <code>textureBackground(...)</code> with UV rect, padding, size overrides, and <code>ResizeMode</code> (<code>STRETCH|CROP|TILE</code>).</li> </ul>"},{"location":"Embers-Text-API/features/#effects","title":"Effects","text":"<ul> <li>Typewriter reveal via <code>typewriter(speed[,center])</code>.</li> <li>Obfuscation reveal with <code>obfuscate</code>, <code>obfuscateSpeed</code> (NBT).</li> <li>Shakes:<ul> <li>Whole text: <code>shake(ShakeType, amp)</code> or NBT <code>shakeWave/circle/random</code>.</li> <li>Per-character: <code>charShake(ShakeType, amp)</code> or NBT <code>charShakeWave/circle/random</code>.</li> </ul> </li> </ul>"},{"location":"Embers-Text-API/features/#wrapping-scaling","title":"Wrapping &amp; Scaling","text":"<ul> <li><code>wrap(px)</code> wraps the message box; combine with <code>size</code> for readability.</li> </ul>"},{"location":"Embers-Text-API/features/#fonts","title":"Fonts","text":"<ul> <li>Data-driven JSON fonts like vanilla; place under <code>assets/emberstextapi/font/</code> and reference via <code>font:\"modid:id\"</code>.</li> </ul>"},{"location":"Embers-Text-API/installation/","title":"\u2699\ufe0f Installation","text":""},{"location":"Embers-Text-API/installation/#requirements","title":"Requirements","text":"<ul> <li>Minecraft Forge 1.20.1</li> <li>Java 17+</li> </ul>"},{"location":"Embers-Text-API/installation/#clientserver","title":"Client/Server","text":"<p>Embers Text API is a client-side renderer with server-triggered networking. For multiplayer servers, put the mod on both server and clients so <code>/emberstextapi</code> messages can be sent to players.</p>"},{"location":"Embers-Text-API/installation/#steps","title":"Steps","text":"<ol> <li>Place the JAR in the <code>mods/</code> folder (client and, if applicable, server).</li> <li>Launch Minecraft with Forge.</li> <li>In game, run: <pre><code>/emberstextapi test 1\n</code></pre>    to verify rendering + networking.</li> </ol>"},{"location":"Embers-Text-API/installation/#dev-setup-gradle","title":"Dev Setup (Gradle)","text":"<p>Add the library to your mod\u2019s Gradle setup like any other Forge dependency (jitpack/flatDir/etc. depending on how you publish it). Then import and call: <pre><code>EmbersTextAPI.sendMessage(player, ImmersiveMessage.builder(80f, \"Hello\"));\n</code></pre></p>"},{"location":"Embers-Text-API/troubleshooting/","title":"\ud83d\udee0 Troubleshooting","text":""},{"location":"Embers-Text-API/troubleshooting/#no-messages-appear","title":"No messages appear","text":"<ul> <li>Ensure the mod is installed on both client and server in multiplayer.</li> <li>Try <code>/emberstextapi test 1</code> to verify base rendering.</li> <li>Check <code>latest.log</code> for missing resources or network warnings.</li> </ul>"},{"location":"Embers-Text-API/troubleshooting/#textures-not-visible-incorrect-size","title":"Textures not visible / incorrect size","text":"<ul> <li>Verify <code>textureBackground.texture</code> path and that the PNG is in your assets.</li> <li>For pixel-art look, use <code>mode:\"CROP\"</code>; for scalable panels use <code>STRETCH</code> with padding.</li> </ul>"},{"location":"Embers-Text-API/troubleshooting/#fonts-not-loading","title":"Fonts not loading","text":"<ul> <li>Font <code>.json</code> and font file must be under <code>assets/emberstextapi/font/</code>.</li> <li>Check the <code>font</code> ID you pass in NBT exactly matches the resource location.</li> </ul>"},{"location":"Embers-Text-API/troubleshooting/#text-is-off-screen","title":"Text is off-screen","text":"<ul> <li>Revisit <code>anchor</code>, <code>offsetX/offsetY</code>, and <code>wrap</code> width.</li> <li>Large <code>size</code> values combined with small screen res can push text off-screen.</li> </ul>"},{"location":"Embers-Text-API/tutorials/","title":"\ud83d\udcd6 Tutorials","text":"<ul> <li>1. Simple popup above hotbar</li> <li>2. Toast with texture background</li> <li>3. Boss warning banner (typewriter + shake)</li> <li>4. Using commands from datapacks/functions</li> <li>5. Custom fonts</li> </ul>"},{"location":"Embers-Text-API/tutorials/boss-warning/","title":"3) Boss warning banner (typewriter + shake)","text":"<pre><code>/emberstextapi sendcustom @a {anchor:\"TOP_CENTER\",offsetY:8,gradient:[\"#FFD700\",\"#FF4500\"],typewriter:2.0,center:true,shakeWave:1.2,wrap:220,background:true} 100 \"\u26a0 The ground trembles...\"\n</code></pre>"},{"location":"Embers-Text-API/tutorials/custom-fonts/","title":"5) Custom fonts","text":"<p>1) Put your <code>.json</code> and <code>.ttf/.otf</code> in: <pre><code>assets/emberstextapi/font/\n</code></pre> 2) Reference the font by its location ID in your NBT: <pre><code>{font:\"yourmod:my_font\"}\n</code></pre> 3) Combine with color/gradient for unique looks.</p>"},{"location":"Embers-Text-API/tutorials/datapack-usage/","title":"4) Using commands from datapacks/functions","text":"<p>You can embed commands inside <code>data/&lt;namespace&gt;/functions/*.mcfunction</code> files and schedule them with advancements, timers, or custom triggers.</p> <p>Example function <code>data/example/functions/announce.mcfunction</code>: <pre><code>execute as @a at @s run emberstextapi sendcustom @s {anchor:\"BOTTOM_RIGHT\",offsetX:-8,offsetY:-8,background:true,wrap:160} 100 \"Daily reward available!\"\n</code></pre></p>"},{"location":"Embers-Text-API/tutorials/simple-popup/","title":"1) Simple popup above hotbar","text":"<pre><code>ImmersiveMessage msg = ImmersiveMessage.builder(80f, \"Hello world\")\n    .anchor(TextAnchor.CENTER_CENTER)\n    .offset(0f, -24f)\n    .background(true);\nEmbersTextAPI.sendMessage(player, msg);\n</code></pre> <p>Command equivalent <pre><code>/emberstextapi send @p 80 \"Hello world\"\n</code></pre></p>"},{"location":"Embers-Text-API/tutorials/textured-toast/","title":"2) Toast with texture background","text":"<p><pre><code>/emberstextapi sendcustom @a {textureBackground:{texture:\"modid:textures/gui/panel.png\",mode:\"STRETCH\",paddingX:6,paddingY:4},wrap:160} 120 \"Updates available\"\n</code></pre> Tips: - Use <code>mode:\"CROP\"</code> to keep pixel density when resizing. - Tiling panels? Set <code>mode:\"TILE\"</code> and tweak <code>scaleX/scaleY</code>.</p>"}]}